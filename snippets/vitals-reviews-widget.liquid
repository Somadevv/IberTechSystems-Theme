{%- comment -%}
  Vitals Reviews Widget Snippet
  This snippet creates a container for Vitals third-party app reviews
  with proper integration for the Vitals app to inject content.
  
  Parameters:
  - product: Required. The product object for which to show reviews
{%- endcomment -%}

{%- if product -%}
  {%- comment -%} Vitals Reviews Container {%- endcomment -%}
  <div class="vitals-reviews-container" data-product-id="{{ product.id }}">
    
    {%- comment -%} Primary Vitals Reviews Widget Container {%- endcomment -%}
    <div 
      id="vitals-reviews-{{ product.id }}"
      class="vitals-reviews-widget" 
      data-vitals-reviews
      data-vitals-product-id="{{ product.id }}"
      data-product-id="{{ product.id }}"
      data-product-handle="{{ product.handle }}"
    >
      {%- comment -%} This is where Vitals will inject the reviews widget {%- endcomment -%}
    </div>
    
    {%- comment -%} 
      Alternative container for Write Review functionality 
      Some Vitals configurations look for specific containers
    {%- endcomment -%}
    <div 
      id="vitals-write-review-{{ product.id }}"
      class="vitals-write-review-widget"
      data-vitals-write-review
      data-product-id="{{ product.id }}"
      data-product-handle="{{ product.handle }}"
    >
      {%- comment -%} Vitals write review widget will render here {%- endcomment -%}
    </div>
    
    {%- comment -%} Fallback content with Leave a Review button {%- endcomment -%}
    <div class="vitals-reviews-fallback" style="padding: 2rem; text-align: center; background: #f8f9fa; border-radius: 8px; border: 1px solid #e9ecef;">
      <div class="reviews-header" style="margin-bottom: 2rem;">
        <h4 style="margin-bottom: 0.5rem; color: #333; font-size: 1.25rem;">Customer Reviews</h4>
        <p style="color: #666; margin: 0;">Share your experience with this product</p>
      </div>
      
      {%- comment -%} Leave a Review Button {%- endcomment -%}
      <div class="leave-review-section">
        <button 
          type="button" 
          class="leave-review-btn vitals-review-trigger"
          data-product-id="{{ product.id }}"
          data-product-handle="{{ product.handle }}"
          style="
            background: #5534eb; 
            color: white; 
            border: none; 
            padding: 10px 20px; 
            cursor: pointer; 
            font-size: 16px; 
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: background-color 0.3s ease;
            box-shadow: 0 2px 4px rgba(85,52,235,0.2);
          "
          onclick="triggerVitalsReview({{ product.id }}, '{{ product.handle }}')"
          onmouseover="this.style.backgroundColor='#4a2bc7'"
          onmouseout="this.style.backgroundColor='#5534eb'"
        >
          ✍️ Leave a Review
        </button>
      </div>
    </div>
    
    {%- comment -%} No JavaScript fallback {%- endcomment -%}
    <noscript>
      <div class="vitals-reviews-noscript" style="padding: 2rem; text-align: center; background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px;">
        <h4 style="color: #856404; margin-bottom: 0.5rem;">JavaScript Required</h4>
        <p style="color: #856404; margin: 0;">Please enable JavaScript to view reviews and leave feedback for this product.</p>
      </div>
    </noscript>
  </div>
  
  {%- comment -%} Vitals Integration JavaScript {%- endcomment -%}
  <script>
    function triggerVitalsReview(productId, productHandle) {
      console.log('Attempting to trigger Vitals review for product:', productId);
      
      // Method 1: Look for actual Vitals review buttons on the page (not our empty containers)
      var vitalsButtons = document.querySelectorAll(
        'button[data-vitals-reviews], ' +
        'button[class*="vitals"], ' + 
        'a[class*="vitals"], ' +
        '[data-vitals-review-form] button, ' +
        '[data-vitals-review-form] a, ' +
        '.vitals-reviews button, ' +
        '.vitals-reviews a, ' +
        'button[onclick*="review"], ' +
        'a[onclick*="review"]'
      );
      
      for (var i = 0; i < vitalsButtons.length; i++) {
        var btn = vitalsButtons[i];
        var btnText = btn.textContent.toLowerCase();
        
        // Skip our own button
        if (btn.classList.contains('leave-review-btn')) continue;
        
        // Look for buttons that seem like review triggers
        if (btnText.includes('write') || btnText.includes('review') || btnText.includes('add review') || btnText.includes('leave')) {
          console.log('Found and clicking Vitals review button:', btn);
          btn.click();
          return;
        }
      }
      
      // Method 2: Direct Vitals API calls using correct objects
      // Try VITALS (uppercase) object first
      if (window.VITALS) {
        console.log('VITALS object found:', window.VITALS);
        console.log('VITALS methods available:', Object.keys(window.VITALS));
        
        try {
          // Try common VITALS API methods
          if (window.VITALS.reviews) {
            console.log('VITALS.reviews found:', Object.keys(window.VITALS.reviews));
            
            if (typeof window.VITALS.reviews.openWriteReviewModal === 'function') {
              window.VITALS.reviews.openWriteReviewModal(productId);
              console.log('Triggered via VITALS.reviews.openWriteReviewModal');
              return;
            }
            if (typeof window.VITALS.reviews.openForm === 'function') {
              window.VITALS.reviews.openForm(productId);
              console.log('Triggered via VITALS.reviews.openForm');
              return;
            }
            if (typeof window.VITALS.reviews.showModal === 'function') {
              window.VITALS.reviews.showModal(productId);
              console.log('Triggered via VITALS.reviews.showModal');
              return;
            }
          }
          
          if (typeof window.VITALS.openReviewForm === 'function') {
            window.VITALS.openReviewForm(productId);
            console.log('Triggered via VITALS.openReviewForm');
            return;
          }
          
          if (typeof window.VITALS.showWriteReview === 'function') {
            window.VITALS.showWriteReview(productId);
            console.log('Triggered via VITALS.showWriteReview');
            return;
          }
          
        } catch (e) {
          console.log('Error calling VITALS methods:', e);
        }
      }
      
      // Try vitalsLibrary object
      if (window.vitalsLibrary) {
        console.log('vitalsLibrary object found:', window.vitalsLibrary);
        console.log('vitalsLibrary methods available:', Object.keys(window.vitalsLibrary));
        
        try {
          if (window.vitalsLibrary.reviews) {
            console.log('vitalsLibrary.reviews found:', Object.keys(window.vitalsLibrary.reviews));
            
            if (typeof window.vitalsLibrary.reviews.openModal === 'function') {
              window.vitalsLibrary.reviews.openModal(productId);
              console.log('Triggered via vitalsLibrary.reviews.openModal');
              return;
            }
            if (typeof window.vitalsLibrary.reviews.showWriteForm === 'function') {
              window.vitalsLibrary.reviews.showWriteForm(productId);
              console.log('Triggered via vitalsLibrary.reviews.showWriteForm');
              return;
            }
          }
          
          if (typeof window.vitalsLibrary.openReviewForm === 'function') {
            window.vitalsLibrary.openReviewForm(productId);
            console.log('Triggered via vitalsLibrary.openReviewForm');
            return;
          }
          
        } catch (e) {
          console.log('Error calling vitalsLibrary methods:', e);
        }
      }
      
      // Try lowercase vitals as fallback
      if (window.Vitals) {
        console.log('Vitals (lowercase) object found for fallback');
        try {
          if (window.Vitals.reviews && typeof window.Vitals.reviews.openForm === 'function') {
            window.Vitals.reviews.openForm(productId);
            console.log('Triggered via Vitals.reviews.openForm');
            return;
          }
        } catch (e) {
          console.log('Error calling lowercase Vitals methods:', e);
        }
      }
      
      // Method 3: Try to initialize Vitals review widget manually
      try {
        // Some Vitals installations use a global function
        if (typeof window.vitalsOpenReviewForm === 'function') {
          window.vitalsOpenReviewForm(productId);
          console.log('Triggered via global vitalsOpenReviewForm');
          return;
        }
        
        // Try jQuery-based Vitals triggers (common pattern)
        if (window.jQuery && window.jQuery.fn.vitalsReviews) {
          window.jQuery(document).trigger('vitals:openReviewForm', [productId]);
          console.log('Triggered via jQuery vitals event');
          return;
        }
      } catch (e) {
        console.log('Error with manual Vitals initialization:', e);
      }
      
      // Method 4: Look in the Vitals carousel area for hidden buttons
      var carousel = document.querySelector('[class*="vitals"][class*="carousel"], [id*="vitals"][id*="reviews"]');
      if (carousel) {
        var hiddenButtons = carousel.querySelectorAll('button[style*="display: none"], button[hidden], .vitals-hidden button');
        for (var j = 0; j < hiddenButtons.length; j++) {
          console.log('Trying hidden button:', hiddenButtons[j]);
          hiddenButtons[j].click();
          return;
        }
      }
      
      // Method 5: Final logging and guidance
      setTimeout(function() {
        console.log('No Vitals review trigger found');
        console.log('Available Vitals objects:', Object.keys(window).filter(k => k.toLowerCase().includes('vital')));
        console.log('VITALS object structure:', window.VITALS ? Object.keys(window.VITALS) : 'not available');
        console.log('vitalsLibrary object structure:', window.vitalsLibrary ? Object.keys(window.vitalsLibrary) : 'not available');
        
        // Log helpful guidance instead of showing alert
        console.log('=== VITALS REVIEW TROUBLESHOOTING ===');
        console.log('1. Check if there\'s a "Write Review" button in the product description area');
        console.log('2. Look for review options below the product images');
        console.log('3. Scroll to the bottom of the page for review sections');
        console.log('4. Check if Vitals reviews are enabled in your store settings');
        console.log('=====================================');
      }, 100);
    }
    
    // Initialize and check for Vitals content
    document.addEventListener('DOMContentLoaded', function() {
      var fallback = document.querySelector('.vitals-reviews-fallback');
      var vitalsContainer = document.querySelector('#vitals-reviews-{{ product.id }}');
      var writeReviewContainer = document.querySelector('#vitals-write-review-{{ product.id }}');
      
      // Function to check if Vitals has loaded content
      function checkVitalsContent() {
        var hasVitalsContent = false;
        
        // Check for Vitals-injected content
        if (vitalsContainer && vitalsContainer.children.length > 0) {
          hasVitalsContent = true;
        }
        if (writeReviewContainer && writeReviewContainer.children.length > 0) {
          hasVitalsContent = true;
        }
        
        // Check for any element with Vitals-specific classes or attributes
        var vitalsElements = document.querySelectorAll('[data-vitals], .vitals-widget, .vitals-reviews-widget-loaded');
        if (vitalsElements.length > 0) {
          hasVitalsContent = true;
        }
        
        // Hide fallback if Vitals content is found
        if (hasVitalsContent && fallback) {
          fallback.style.display = 'none';
        }
        
        return hasVitalsContent;
      }
      
      // Check immediately and then periodically
      checkVitalsContent();
      setTimeout(checkVitalsContent, 2000);
      setTimeout(checkVitalsContent, 5000);
      
      // Listen for Vitals-specific events
      document.addEventListener('vitals:loaded', checkVitalsContent);
      document.addEventListener('vitals:reviews:loaded', checkVitalsContent);
    });
  </script>

{%- else -%}
  {%- comment -%} Error state - no product provided {%- endcomment -%}
  <div class="vitals-reviews-error" style="padding: 2rem; text-align: center; background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px;">
    <h4 style="color: #721c24; margin-bottom: 0.5rem;">Unable to Load Reviews</h4>
    <p style="color: #721c24; margin: 0;">No product specified for reviews display.</p>
  </div>
{%- endif -%}