{%- comment -%}
  Vitals Reviews Widget Snippet
  This snippet creates a container for Vitals third-party app reviews
  with proper integration for the Vitals app to inject content.
  
  Parameters:
  - product: Required. The product object for which to show reviews
{%- endcomment -%}

{%- if product -%}
  {%- comment -%} Vitals Reviews Container {%- endcomment -%}
  <div class="vitals-reviews-container" data-product-id="{{ product.id }}">
    
    {%- comment -%} Primary Vitals Reviews Widget Container {%- endcomment -%}
    <div 
      id="vitals-reviews-{{ product.id }}"
      class="vitals-reviews-widget" 
      data-vitals-reviews
      data-vitals-product-id="{{ product.id }}"
      data-product-id="{{ product.id }}"
      data-product-handle="{{ product.handle }}"
    >
      {%- comment -%} This is where Vitals will inject the reviews widget {%- endcomment -%}
    </div>
    
    {%- comment -%} 
      Alternative container for Write Review functionality 
      Some Vitals configurations look for specific containers
    {%- endcomment -%}
    <div 
      id="vitals-write-review-{{ product.id }}"
      class="vitals-write-review-widget"
      data-vitals-write-review
      data-product-id="{{ product.id }}"
      data-product-handle="{{ product.handle }}"
    >
      {%- comment -%} Vitals write review widget will render here {%- endcomment -%}
    </div>
    
    {%- comment -%} Fallback content with Leave a Review button {%- endcomment -%}
    <div class="vitals-reviews-fallback" style="padding: 2rem; text-align: center; background: #f8f9fa; border-radius: 8px; border: 1px solid #e9ecef;">
      <div class="reviews-header" style="margin-bottom: 2rem;">
        <h4 style="margin-bottom: 0.5rem; color: #333; font-size: 1.25rem;">Customer Reviews</h4>
        <p style="color: #666; margin: 0;">Share your experience with this product</p>
      </div>
      
      {%- comment -%} Leave a Review Button {%- endcomment -%}
      <div class="leave-review-section">
        <button 
          type="button" 
          class="leave-review-btn vitals-review-trigger"
          data-product-id="{{ product.id }}"
          data-product-handle="{{ product.handle }}"
          style="
            background: #007bff; 
            color: white; 
            border: none; 
            padding: 10px 20px; 
            border-radius: 8px; 
            cursor: pointer; 
            font-size: 16px; 
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: background-color 0.3s ease;
            box-shadow: 0 2px 4px rgba(0,123,255,0.2);
          "
          onclick="openVitalsReviewModal(this)"
          onmouseover="this.style.backgroundColor='#0056b3'"
          onmouseout="this.style.backgroundColor='#007bff'"
        >
          ✍️ Leave a Review
        </button>
      </div>
    </div>
    
    {%- comment -%} No JavaScript fallback {%- endcomment -%}
    <noscript>
      <div class="vitals-reviews-noscript" style="padding: 2rem; text-align: center; background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px;">
        <h4 style="color: #856404; margin-bottom: 0.5rem;">JavaScript Required</h4>
        <p style="color: #856404; margin: 0;">Please enable JavaScript to view reviews and leave feedback for this product.</p>
      </div>
    </noscript>
  </div>
  
  {%- comment -%} Vitals Integration JavaScript {%- endcomment -%}
  <script>
    function openVitalsReviewModal(button) {
      var productId = button.getAttribute('data-product-id');
      var productHandle = button.getAttribute('data-product-handle');
      
      // Method 1: Check for Vitals global object and trigger review form
      if (typeof window.Vitals !== 'undefined' && window.Vitals) {
        // Try the most common Vitals methods
        if (window.Vitals.reviews && typeof window.Vitals.reviews.openReviewForm === 'function') {
          window.Vitals.reviews.openReviewForm(productId);
          return;
        }
        if (window.Vitals.openReviewForm && typeof window.Vitals.openReviewForm === 'function') {
          window.Vitals.openReviewForm(productId);
          return;
        }
        if (window.Vitals.showReviewForm && typeof window.Vitals.showReviewForm === 'function') {
          window.Vitals.showReviewForm(productId);
          return;
        }
      }
      
      // Method 2: Look for existing Vitals review buttons on the page and trigger them
      var existingVitalsButton = document.querySelector(
        '[data-vitals-review-form], ' +
        '[data-vitals-write-review], ' +
        '.vitals-review-btn, ' +
        '.vitals-write-review-btn, ' +
        '[onclick*="vitals"], ' +
        '[onclick*="review"]'
      );
      if (existingVitalsButton && existingVitalsButton !== button) {
        existingVitalsButton.click();
        return;
      }
      
      // Method 3: Try window-level Vitals functions
      if (typeof window.openVitalsReviewForm === 'function') {
        window.openVitalsReviewForm(productId);
        return;
      }
      if (typeof window.showVitalsReviewForm === 'function') {
        window.showVitalsReviewForm(productId);
        return;
      }
      
      // Method 4: Dispatch custom events that Vitals might listen for
      var customEvent = new CustomEvent('vitals-open-review-form', {
        detail: { productId: productId, productHandle: productHandle },
        bubbles: true
      });
      document.dispatchEvent(customEvent);
      
      var openReviewEvent = new CustomEvent('open-review-form', {
        detail: { productId: productId, productHandle: productHandle },
        bubbles: true
      });
      document.dispatchEvent(openReviewEvent);
      
      // Method 5: Try to find and trigger any Vitals modal triggers
      setTimeout(function() {
        var modalTriggers = document.querySelectorAll('[data-modal="review"], [data-toggle="review-modal"], .review-modal-trigger');
        for (var i = 0; i < modalTriggers.length; i++) {
          if (modalTriggers[i] !== button) {
            modalTriggers[i].click();
            return;
          }
        }
        
        // Final fallback - show user guidance
        var message = 'To leave a review:\\n\\n' +
                     '1. Look for a "Write Review" button elsewhere on this page\\n' +
                     '2. Check below the product images or description\\n' +
                     '3. Scroll down to find the Vitals review section\\n\\n' +
                     'If you don\\'t see review options, reviews may not be enabled for this product.';
        alert(message);
        
        console.log('Vitals review form trigger attempted for product:', productId);
        console.log('Available Vitals objects:', {
          Vitals: typeof window.Vitals !== 'undefined' ? Object.keys(window.Vitals || {}) : 'undefined',
          VitalsReviews: typeof window.VitalsReviews !== 'undefined' ? Object.keys(window.VitalsReviews || {}) : 'undefined'
        });
      }, 100);
    }
    
    // Initialize and check for Vitals content
    document.addEventListener('DOMContentLoaded', function() {
      var fallback = document.querySelector('.vitals-reviews-fallback');
      var vitalsContainer = document.querySelector('#vitals-reviews-{{ product.id }}');
      var writeReviewContainer = document.querySelector('#vitals-write-review-{{ product.id }}');
      
      // Function to check if Vitals has loaded content
      function checkVitalsContent() {
        var hasVitalsContent = false;
        
        // Check for Vitals-injected content
        if (vitalsContainer && vitalsContainer.children.length > 0) {
          hasVitalsContent = true;
        }
        if (writeReviewContainer && writeReviewContainer.children.length > 0) {
          hasVitalsContent = true;
        }
        
        // Check for any element with Vitals-specific classes or attributes
        var vitalsElements = document.querySelectorAll('[data-vitals], .vitals-widget, .vitals-reviews-widget-loaded');
        if (vitalsElements.length > 0) {
          hasVitalsContent = true;
        }
        
        // Hide fallback if Vitals content is found
        if (hasVitalsContent && fallback) {
          fallback.style.display = 'none';
        }
        
        return hasVitalsContent;
      }
      
      // Check immediately and then periodically
      checkVitalsContent();
      setTimeout(checkVitalsContent, 2000);
      setTimeout(checkVitalsContent, 5000);
      
      // Listen for Vitals-specific events
      document.addEventListener('vitals:loaded', checkVitalsContent);
      document.addEventListener('vitals:reviews:loaded', checkVitalsContent);
    });
  </script>

{%- else -%}
  {%- comment -%} Error state - no product provided {%- endcomment -%}
  <div class="vitals-reviews-error" style="padding: 2rem; text-align: center; background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px;">
    <h4 style="color: #721c24; margin-bottom: 0.5rem;">Unable to Load Reviews</h4>
    <p style="color: #721c24; margin: 0;">No product specified for reviews display.</p>
  </div>
{%- endif -%}