{%- comment -%}
  Vitals Reviews Widget Snippet
  This snippet creates a container for Vitals third-party app reviews
  with proper integration for the Vitals app to inject content.
  
  Parameters:
  - product: Required. The product object for which to show reviews
{%- endcomment -%}

{%- if product -%}
  {%- comment -%} Vitals Reviews Container {%- endcomment -%}
  <div class="vitals-reviews-container" data-product-id="{{ product.id }}">
    
    {%- comment -%} Primary Vitals Reviews Widget Container {%- endcomment -%}
    <div 
      id="vitals-reviews-{{ product.id }}"
      class="vitals-reviews-widget" 
      data-vitals-reviews
      data-vitals-product-id="{{ product.id }}"
      data-product-id="{{ product.id }}"
      data-product-handle="{{ product.handle }}"
    >
      {%- comment -%} This is where Vitals will inject the reviews widget {%- endcomment -%}
    </div>
    
    {%- comment -%} 
      Alternative container for Write Review functionality 
      Some Vitals configurations look for specific containers
    {%- endcomment -%}
    <div 
      id="vitals-write-review-{{ product.id }}"
      class="vitals-write-review-widget"
      data-vitals-write-review
      data-product-id="{{ product.id }}"
      data-product-handle="{{ product.handle }}"
    >
      {%- comment -%} Vitals write review widget will render here {%- endcomment -%}
    </div>
    
    {%- comment -%} Fallback content with Leave a Review button {%- endcomment -%}
    <div class="vitals-reviews-fallback" style="padding: 2rem; text-align: center; background: #f8f9fa; border-radius: 8px; border: 1px solid #e9ecef;">
      <div class="reviews-header" style="margin-bottom: 2rem;">
        <h4 style="margin-bottom: 0.5rem; color: #333; font-size: 1.25rem;">Customer Reviews</h4>
        <p style="color: #666; margin: 0;">Share your experience with this product</p>
      </div>
      
      {%- comment -%} Leave a Review Button {%- endcomment -%}
      <div class="leave-review-section">
        <button 
          type="button" 
          class="leave-review-btn vitals-review-trigger"
          data-product-id="{{ product.id }}"
          data-product-handle="{{ product.handle }}"
          style="
            background: #5534eb; 
            color: white; 
            border: none; 
            padding: 10px 20px; 
            cursor: pointer; 
            font-size: 16px; 
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: background-color 0.3s ease;
            box-shadow: 0 2px 4px rgba(85,52,235,0.2);
          "
          onclick="triggerVitalsReview({{ product.id }}, '{{ product.handle }}')"
          onmouseover="this.style.backgroundColor='#4a2bc7'"
          onmouseout="this.style.backgroundColor='#5534eb'"
        >
          ✍️ Leave a Review
        </button>
      </div>
    </div>
    
    {%- comment -%} No JavaScript fallback {%- endcomment -%}
    <noscript>
      <div class="vitals-reviews-noscript" style="padding: 2rem; text-align: center; background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px;">
        <h4 style="color: #856404; margin-bottom: 0.5rem;">JavaScript Required</h4>
        <p style="color: #856404; margin: 0;">Please enable JavaScript to view reviews and leave feedback for this product.</p>
      </div>
    </noscript>
  </div>
  
  {%- comment -%} Vitals Integration JavaScript {%- endcomment -%}
  <script>
    function triggerVitalsReview(productId, productHandle) {
      console.log('=== VITALS REVIEW TRIGGER v7.0 - Targeted atcButton States ===');
      console.log('Product ID:', productId, 'Handle:', productHandle);
      
      // Primary Method: Use VITALS.states.atcButton approach based on debug output
      if (window.VITALS && window.VITALS.states && window.VITALS.states.atcButton) {
        console.log('Found VITALS.states.atcButton:', window.VITALS.states.atcButton);
        
        try {
          var atcState = window.VITALS.states.atcButton;
          
          // Check if it's a state manager with getState/subscribe methods
          if (typeof atcState.getState === 'function') {
            var currentState = atcState.getState();
            console.log('atcButton current state:', currentState);
            
            // Try to trigger review form via state change
            if (typeof atcState.setState === 'function') {
              atcState.setState({ showReviewForm: true, productId: productId });
              console.log('Triggered review via atcButton.setState');
              return;
            }
          }
          
          // Try direct method calls on atcButton
          if (typeof atcState.openReviewForm === 'function') {
            atcState.openReviewForm(productId);
            console.log('Triggered via atcButton.openReviewForm');
            return;
          }
          
          if (typeof atcState.showReview === 'function') {
            atcState.showReview(productId);
            console.log('Triggered via atcButton.showReview');
            return;
          }
          
          if (typeof atcState.writeReview === 'function') {
            atcState.writeReview(productId);
            console.log('Triggered via atcButton.writeReview');
            return;
          }
          
        } catch (e) {
          console.log('Error with atcButton state:', e.message);
        }
      }
      
      // Fallback Method: Look for existing Vitals review buttons that were actually rendered
      console.log('=== SEARCHING FOR VITALS REVIEW ELEMENTS ===');
      
      // Look for Vitals-generated review buttons with common patterns
      var reviewSelectors = [
        'button[data-vitals-action*="review"]',
        'a[data-vitals-action*="review"]',
        '[class*="vitals-review-trigger"]',
        '[class*="vitals-write-review"]',
        'button[onclick*="vitals"][onclick*="review"]',
        '.vitals-reviews-widget button',
        '[data-vitals-reviews] button'
      ];
      
      for (var i = 0; i < reviewSelectors.length; i++) {
        var buttons = document.querySelectorAll(reviewSelectors[i]);
        console.log('Found ' + buttons.length + ' elements for selector: ' + reviewSelectors[i]);
        
        for (var j = 0; j < buttons.length; j++) {
          var btn = buttons[j];
          var btnText = btn.textContent.toLowerCase().trim();
          
          // Skip our own fallback button
          if (btn.classList.contains('leave-review-btn')) continue;
          
          console.log('Checking button:', btnText, btn);
          
          if (btnText.includes('write') || btnText.includes('review') || btnText.includes('add')) {
            console.log('CLICKING VITALS REVIEW BUTTON:', btn);
            btn.click();
            return;
          }
        }
      }
      
      // Check if VITALS has other states that might control reviews
      if (window.VITALS && window.VITALS.states) {
        console.log('Available VITALS states:', Object.keys(window.VITALS.states));
        
        // Check for reviews-specific state
        if (window.VITALS.states.reviews) {
          console.log('Found VITALS.states.reviews:', window.VITALS.states.reviews);
          try {
            if (typeof window.VITALS.states.reviews.openForm === 'function') {
              window.VITALS.states.reviews.openForm(productId);
              console.log('Triggered via VITALS.states.reviews.openForm');
              return;
            }
          } catch (e) {
            console.log('Error with reviews state:', e.message);
          }
        }
      }
      
      // Last resort: Try VITALS.init with simplified config
      if (window.VITALS && typeof window.VITALS.init === 'function') {
        console.log('Trying VITALS.init as last resort...');
        try {
          window.VITALS.init({ 
            action: 'write-review',
            productId: productId,
            productHandle: productHandle
          });
          console.log('Called VITALS.init with write-review action');
        } catch (e) {
          console.log('VITALS.init failed:', e.message);
        }
      }
      
      // Final fallback - show guidance
      console.log('=== NO VITALS REVIEW TRIGGER FOUND ===');
      console.log('The Vitals app may not have review functionality enabled for this product.');
      console.log('Check your Vitals app settings to ensure product reviews are configured.');
    }
    
    // Initialize and check for Vitals content
    document.addEventListener('DOMContentLoaded', function() {
      var fallback = document.querySelector('.vitals-reviews-fallback');
      var vitalsContainer = document.querySelector('#vitals-reviews-{{ product.id }}');
      var writeReviewContainer = document.querySelector('#vitals-write-review-{{ product.id }}');
      
      // Function to check if Vitals has loaded content
      function checkVitalsContent() {
        var hasVitalsContent = false;
        
        // Check for Vitals-injected content
        if (vitalsContainer && vitalsContainer.children.length > 0) {
          hasVitalsContent = true;
        }
        if (writeReviewContainer && writeReviewContainer.children.length > 0) {
          hasVitalsContent = true;
        }
        
        // Check for any element with Vitals-specific classes or attributes
        var vitalsElements = document.querySelectorAll('[data-vitals], .vitals-widget, .vitals-reviews-widget-loaded');
        if (vitalsElements.length > 0) {
          hasVitalsContent = true;
        }
        
        // Hide fallback if Vitals content is found
        if (hasVitalsContent && fallback) {
          fallback.style.display = 'none';
        }
        
        return hasVitalsContent;
      }
      
      // Check immediately and then periodically
      checkVitalsContent();
      setTimeout(checkVitalsContent, 2000);
      setTimeout(checkVitalsContent, 5000);
      
      // Listen for Vitals-specific events
      document.addEventListener('vitals:loaded', checkVitalsContent);
      document.addEventListener('vitals:reviews:loaded', checkVitalsContent);
    });
  </script>

{%- else -%}
  {%- comment -%} Error state - no product provided {%- endcomment -%}
  <div class="vitals-reviews-error" style="padding: 2rem; text-align: center; background: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px;">
    <h4 style="color: #721c24; margin-bottom: 0.5rem;">Unable to Load Reviews</h4>
    <p style="color: #721c24; margin: 0;">No product specified for reviews display.</p>
  </div>
{%- endif -%}